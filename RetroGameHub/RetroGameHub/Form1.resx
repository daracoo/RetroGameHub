<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBkAAAEAIAAMDQAAFgAAACgAAAAgAAAAMgAAAAEAIAAAAAAAgAwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAQEBAABwcHAAICAgADAwMACAgIABYWFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATExMABwcHAAIC
        AgACAgIACAgIABUVFQAAAAAACAgIABUVFQIAAAAqAAAAVQAAAFACAgIiAAAAAAICAgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEAEFB
        QQEBAQEmAAAAUwAAAFQAAAAmZWZlAAsLCwAKCgoKBgYGdioqKuNLS0v8Ozs8+xMTE9sCAgJtAgICBw0N
        DQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0N
        DQAGBgYLAwMDeRYWFuA+Pj78SklK/CYlJt4FBQVqDQ0NBgQEBG5EREX2tbS1/8rJy/+0tbb/enx8/x4e
        HvcBAQFvFhYVAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB2dnYAFBQUBAICAn4kJCX6goKD/7e3uf/Kycv/r66v/zs7O/ECAgJcFBUV0ImLjP/Kysv/ysnL/7m7
        vP+jpab/Z2hp/w4PD+YEBAQ0CgoKAA0NDQANDQ0ADQ0NABUVFQAAAAAAAAAAAAAAAAAAAAAAFBQUAA0N
        DQAODg4AEBAQAAAAAAADAwNCExMT7m9xcv+lp6j/u7y9/8vKzP/Jycr/f4CA/w8PD74fICDuiYuN/7q7
        vP/JyMr/vL2+/6Olpv+GiIr/ODg5/wMDA6AXFxYECAgIBQQDAxYGBQUPAAAAAAsLCwAAAAAAAAAAAAgI
        CAAAAAAABQUFEQUFBRUODg4EDw8PCAQEBLFAQEH/iouN/6WnqP++v8D/ycnL/7e4uv+Cg4X/GRkZ3Bsc
        HOV3eHv/pqep/8bGx//AwML/p6mq/4qLjv9fX2D/ExIT7gMDA3MHBwemEBAQ1QsLC8gDAwN3CwsLDxMT
        EwAPDw8ABwcHFAMDA4AMDAzMEBAQ1AYGBqACAgJ4FxcX9GVlZv+MjpD/qaus/8HCw//Fxcb/oqSl/3Bx
        dP8VFRXTEhISy2JjZP+Nj5D/vb2//8PDxf+rra7/jY6Q/29vcf83NTb/EBAQ/ExNTv9wcXP/YWJk/ycn
        J/wEBASLCwsLDgkJCBEFBQWaLCwt/mVlZ/9wcHL/R0hJ/w4ODvw8PD3/cnFz/4+Rkv+usLH/xMTG/7u7
        vP+Ki43/XF1e/w0NDbgJCQmpTk1P/3Z2eP+rrK3/xMTG/7KztP+SlZb/dnd5/1pZWv9UVVb/h4mL/46P
        kf+NjpD/bG1u/xkZGfUMCwvFCwsLxx4eHvhycnT/jY6R/46Pkf+Fhon/UlFS/11cXv95eXz/lZeZ/7S1
        t//ExMb/pqip/3R0dv9IR0j/BgYGlQMDA387Ozz+ZGRm/5GTlP/CwsP/uru9/5udn/+AgYP/aWhr/3Jz
        df9eXl//OTg4/0hHSP9yc3T/Zmdo/29wcf9wcXL/amps/3Fxc/9ERET/Ojk5/2JiZP9xcnT/amps/4KC
        hv+en6L/vL2+/8DAwv+LjY7/Y2Nl/zU0NfwBAQFrAQEBVS0tLvdgX2H/e3t9/66vsP+en6L/iImN/4GC
        hv97fID/cHB0/zg0M/82MS7/Mi4r/1ZVVf+LjY//ra+w/6+xsv+MjZD/UE5Q/zIuK/81MS7/Ojg2/3N0
        dv98fYH/g4SI/4qMjv+goqP/rK6v/3V2d/9fXmD/KCco8gAAAEQAAAAvICAg511cXv9wcHP/iYqN/4SF
        if+Cg4f/goOH/4SFif92dnn/S0hH/1JQT/9MSUj/XVtb/3+Bg/+Rk5b/kZOW/4CAg/9ZV1f/TUtJ/1JQ
        T/9MSkn/ent+/3BxdP9KSkz/cHFz/4WGiv+Iio3/bW1w/1pZW/8bGxzdAQEBIwEBARMUFBTLW1tc/4WG
        iP+MjpH/jI6R/3t7ff9nZmj/fH1//4iJjP9zc3T/hYWH/3Z3ef90dXb/gIGD/4qLj/+Jio7/gICD/3Rz
        dv95eXz/hISG/3N0df+Ki43/TU1O/ycmJv9PT1D/jY6R/42Okf+DhIb/VVVW/xAQELwDAwILAwMDAwkJ
        CaNgYGL/l5ma/5SWlv+SlJX/eXl6/1hXWP97fH3/kpSV/5OVlv+dn6D/kJKT/4WGif+Ki47/i4yQ/4uM
        kP+Jio7/hYaK/5KTlv+dnqD/jI2O/5GTlP+DhIX/hYWG/4OFhv+Rk5T/jY+Q/5eYmv9XV1n/BwcHkwoK
        CgEDAwMABgUGfGhpav+qrK3/iYqL/2ZlZv9lZGT/YV9f/2VlZf9nZ2f/jY2P/6epqv+cnZ7/lJWW/5aY
        mf+Ympz/mJqb/5WXmP+Rk5T/nqCi/4yOjv84ODj/W1xd/6epqv+qrK3/p6iq/1RUXf8xLz3/j5CU/2Bg
        Yf8CAgJsBwgHAAAAAAADAwNpa2ts/76+wP+RkJL/W1pb/19eXf98e3v/Xl5d/19eX/+WlZf/uru8/7a3
        uP+/wMH/s7W2/7O1tv+ytLX/s7W2/7O1tv+1t7j/kZGS/0FBQf9eXV7/uLi5/8HCw/+3uLr/T01d/y8s
        Qv+Tkpz/YmJi/QICAlgAAAAAAAAAAAAAAEBMTEz0xMTF/7W1tv+joqP/h4aG/1ZVVf+KiYr/o6Ok/7e2
        t//JyMn/0NDQ/9LS0v/R0dL/0dHR/9DQ0f/P0ND/z8/Q/83Nzv/Dw8P/tra2/7q7u/+5ubn/kZGR/7q6
        uv+2tbr/r623/7u7vf9CQkLtAAAAMgAAAAAAAAAAAQEBDRgYGLafn5//6Ojo/+Xl5f+pqar/aGZo/6+u
        r//m5+b/4+Pj/83Nzf/MzMz/zc3N/83Nzf/MzMz/zMzM/8zMzP/Ly8v/ycnJ/87Ozv/k5OT/5eXl/3t7
        e/8dHR3/fn5+/+Xl5f/o6Of/k5OS/xMTE6gDAwMIAAAAAAAAAAAAAAAAAAAAOCsrK9qwsLD/8PDw/9zc
        3P/Kycr/397f/+/v7/+qq6v/Ly8v9CgoKOApKSngKSkp4CkpKeApKSngKSkp4CkpKeAoKCjgNDQ09rW1
        tf/w8PD/q6ur/3l5ef+srKz/8PDw/6Wlpf8kJCTRAAAALQAAAAAAAAAAAAAAABMTEwAAAAAAAAAATzk5
        OvS6urv/z8/Q/9TU1f/Nzs//ury9/1NUVf8AAACeAQEBHwAAAB8BAQEfAQEBHwAAAB8BAQEfAAAAHwAA
        ACABAQGwX2Bg/76/wP/Nzc7/zc3O/83Ozv+ztLX/Ly8v7QAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAA8P
        DwADAwMNExMTunBwcP+dnZ7/nJyc/5iYmf9zdHT/Hh4e7AQEBEcSEhIAEhISABISEgASEhIAEhISABIS
        EgASEhIAEBAQAAMDA1YjIyPyeXl6/5mZmv+dnJ3/nZ2d/2dnaP8PDw+rBAQECBsbGwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAADAwMtCgoKnxQUFMIUFBTBERERvwYGBqcCAgJMGBgYAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABpaWkAExMTBQICAlYIBwerEhERvxUUFMIVFBTCCQkJmAUEBCUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAKCgoAAICAgAMDAwCCwsLCw0ODgoDBAQJCgoKAwAAAAAREREAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw8AAAAAAAgICAQDBAQJEBAQCwwNDQoQEBABBAQEADMz
        MwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJycnABYWFgAeHh4AICAgABYWFgAPDw8ALS0tAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtLS0ADw8PABYWFgAiIiIAHx8fABcX
        FwBAQEAAAAAAAAAAAAAAAAAAAAAAAP//////////g///gwD//wAAf/4AAH/+AAAH4AAAAYAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAABgAAAAYAAAAHAAAAD4AAAB+AP8AfwD/AP+D/8H///
        //8=
</value>
  </data>
</root>