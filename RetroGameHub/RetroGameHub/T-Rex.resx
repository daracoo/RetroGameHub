<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="gameTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>